/*可维护的行高与字号*/
/*当需要变动时，只需要改动字号就可以了*/
/*推荐使用em作为单位，这样可以根据父级的字体大小来调整子元素的各项尺寸，但是也要注意哪些地方不需要修改
，比方说边框1px*/
.a {
    font-size: 20px;
    line-height: 1.5;
}


/*让颜色也可以维护，也是优化代码的一项技巧*/
button {
    padding: .3em .8em;
    border: 1px solid rgba(0, 0, 0, .1);
    background: #58a linear-gradient(hsla(0, 0%, 100%, .2), transparent);
    border-radius: .2em;
    box-shadow: 0 .05em .25em rgba(0, 0, 0, .5);
    color: white;
    text-shadow: 0 -.05em .05em rgba(0,0,0,.5);
    font-size:125%;
    line-height: 1.5;
}
button.cancle {
    background-color: #c00;
}
button.ok {
    background-color: #6b0;
}


/*边框可维护性，主要针对将来要改边框的宽度*/
/*不好的写法*/
.a {
    border-width: 10px 10px 10px 0;
}
/*好的写法*/
.a {
    border-width: 10px;
    border-left-width: 0;
}



/*颜色*/
/*自动引用文字颜色*/
hr {
    height: .5em;
    background: currentColor;
}

/*把表单元素的字体设定为与页面的其他部分相同，不需要重复设置字体属性*/
input,select,button {
    font: inherit;
}

/*把超链接的颜色设定为与页面中其他文本相同*/
a {
    color: inherit;
}

/*提示框小箭头背景色*/
.callout {
    position: relative;
}
.callout::before {
    content: "";
    position: absolute;
    top: -.4em;
    left: 1em;
    padding: .35em;
    background: inherit;
    border: inherit;
    border-right: 0;
    border-bottom: 0;
    transform: rotate(45deg);
}


/*
使用百分比长度来取代固定宽度。
当你需要在较大分辨率下得到固定宽度时，使用max-width而不是width，因为他可以适应较小的分辨率，而无需使用媒体查询。
不要忘记为替换元素（比方说img、object、video、iframe等）设置一个max-width，值为100%
在使用多列文本时，指定column-width（列宽）而不是指定column-count（列数），这样他就可以在较小的屏幕上自动显示为单列布局

*/



/*
合理使用简写是一种良好的防卫性编码方式，可以抵御未来的风险。
如果只为某个属性提供一个值，那它就会扩散并应用到列表中的每一项。
*/
.a {
    background: url(tr.png) no-repeat top right / 2em 2em,
                url(tr.png) no-repeat top right / 2em 2em,
                url(tr.png) no-repeat top right / 2em 2em;
}
.a {
    background: url(tr.png) top right,
                url(tr.png) bottom right,
                url(tr.png) bottom left;
    background-size: 2em 2em;
    background-repeat: no-repeat;
}


/*在每个项目开始时使用纯css，只有当代码开始变得无法保持简洁时，才切换到预处理器*/

/*半透明边框*/
.a {
    border: 10px solid hsla(0,0%,100%,.5);
    background: white;
    background-clip: padding-box;
}



/*投影形成的边框，好处是可以用逗号分隔符，制造任意数量的投影*/
/*注意：投影边框不影响排版，不会影响鼠标事件*/
.a {
    background: yellowgreen;
    box-shadow: 0 0 0 10px #655, 0 0 0 15px deeppink;
}

/*outline描边来绘制边框*/

.a {
    background: yellowgreen;
    border: 10px solid #555;
    outline: 5px solid deeppink;
}



/*背景图片*/
.a {
    background: url("code-pirate.svg") no-repeat bottom right #58a;       /*添加bottom 和 right 是为了保证效果回退，有些浏览器可能不支持background-position*/
    background-position: right 20px bottom 10px;
}

/*通过background-origin修改背景容器原点*/
.a {
    padding: 10px;
    background: url("code-pirate.svg") no-repeat #58a bottom right;
    background-origin: content-box;
}

/*calc()计算解决方案*/
.a {
    background: url("code-pirate.svg") no-repeat #58a bottom right;
    background-position: calc(100% - 20px) calc(100% - 10x);
}

/*书本看到了page25（未读完）*/












